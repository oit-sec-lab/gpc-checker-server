// Code generated by MockGen. DO NOT EDIT.
// Source: ../domain/repositories/net/net.go

// Package mock_net is a generated GoMock package.
package mock_net

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockINetRepository is a mock of INetRepository interface.
type MockINetRepository struct {
	ctrl     *gomock.Controller
	recorder *MockINetRepositoryMockRecorder
}

// MockINetRepositoryMockRecorder is the mock recorder for MockINetRepository.
type MockINetRepositoryMockRecorder struct {
	mock *MockINetRepository
}

// NewMockINetRepository creates a new mock instance.
func NewMockINetRepository(ctrl *gomock.Controller) *MockINetRepository {
	mock := &MockINetRepository{ctrl: ctrl}
	mock.recorder = &MockINetRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINetRepository) EXPECT() *MockINetRepositoryMockRecorder {
	return m.recorder
}

// CheckGPC mocks base method.
func (m *MockINetRepository) CheckGPC(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckGPC", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckGPC indicates an expected call of CheckGPC.
func (mr *MockINetRepositoryMockRecorder) CheckGPC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckGPC", reflect.TypeOf((*MockINetRepository)(nil).CheckGPC), arg0)
}
