// Code generated by MockGen. DO NOT EDIT.
// Source: ../domain/repositories/gpc/gpc.go

// Package mock_gpc is a generated GoMock package.
package mock_gpc

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gpc "github.com/oit-sec-lab/gpc-checker-server/src/domain/entities/gpc"
)

// MockIGpcRepository is a mock of IGpcRepository interface.
type MockIGpcRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIGpcRepositoryMockRecorder
}

// MockIGpcRepositoryMockRecorder is the mock recorder for MockIGpcRepository.
type MockIGpcRepositoryMockRecorder struct {
	mock *MockIGpcRepository
}

// NewMockIGpcRepository creates a new mock instance.
func NewMockIGpcRepository(ctrl *gomock.Controller) *MockIGpcRepository {
	mock := &MockIGpcRepository{ctrl: ctrl}
	mock.recorder = &MockIGpcRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGpcRepository) EXPECT() *MockIGpcRepositoryMockRecorder {
	return m.recorder
}

// CheckGPC mocks base method.
func (m *MockIGpcRepository) CheckGPC(arg0 string) (gpc.Gpc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckGPC", arg0)
	ret0, _ := ret[0].(gpc.Gpc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckGPC indicates an expected call of CheckGPC.
func (mr *MockIGpcRepositoryMockRecorder) CheckGPC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckGPC", reflect.TypeOf((*MockIGpcRepository)(nil).CheckGPC), arg0)
}
